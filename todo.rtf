{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 **to-do:**\
\
- Compare vs. Julia's built-in SOR method and other algorithms\
- Benchmarks\
- Edge cases (SOR convergence is only provable for symmetric, positive definite matrices)\
- Convergence plots (use residual error over starting residual, not in the code yet)\
- Add explanation why we are slower than built-in functions (they call C code, optimized, ...)\
- Build out error handling properly\
- Memory savings possible?dd\
- Convergence rate, proofs, etc. \
- Choice of omega (convergence comparisons, etc.)\
- Visualization (interesting examples)\
\
\
**optional**:\
\
- Add Hartree-Fock code\
- Adaptive omega? \
- Parallel? }